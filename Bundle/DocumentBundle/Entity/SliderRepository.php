<?php

namespace TDN\Bundle\DocumentBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * DocumentTypeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SliderRepository extends EntityRepository
{
	public function findSelection ($limite) {
		$qb = $this->createQueryBuilder('s'); 
		$q = $qb->select('s')
				->where($qb->expr()->andX(
       				$qb->expr()->eq('s.statut', '1'),
       				$qb->expr()->lte('s.datePublication', ':now')))
				->setParameter('now', new \DateTime)
				->orderBy('s.ordre', 'DESC')
				->addOrderBy('s.idSlide', 'DESC')
				->setMaxResults($limite)
				->getQuery()
				->useResultCache(true, 3600);

		return $q->getResult();
	}

	public function getFeatured ($limite) {
		$qb = $this->createQueryBuilder('s'); 
		$q = $qb->select('s', 'd')
				->innerjoin('s.lnSource', 'd')
				->where($qb->expr()->andX(
       				$qb->expr()->eq('s.statut', '1'),
       				$qb->expr()->lte('s.datePublication', ':now'),
       				$qb->expr()->like('d.statut', ':statut')))
				->setParameter('now', new \DateTime)
				->setParameter('statut', 'ARTICLE_PUBLIE')
				->orderBy('s.ordre', 'DESC')
				->addOrderBy('s.idSlide', 'DESC')
				->setMaxResults($limite)
				->getQuery()
				->useResultCache(true, 3600);

		return $q->getResult();
	}

	public function sqlFeatured ($limite) {

		$rsm = new ResultSetMapping;
		$rsm->addEntityResult('TDN\Bundle\DocumentBundle\Entity\Document', 'd');
		$rsm->addJoinedEntityResult('TDN\Bundle\DocumentBundle\Entity\Slider', 's', 'd', 'lnPromu');
		$rsm->addJoinedEntityResult('TDN\Bundle\ImageBundle\Entity\Image', 'i', 'd', 'lnIllustration');
		$rsm->addFieldResult('d', 'id', 'idDocument');
		$rsm->addFieldResult('d', 'titre', 'titre');
		$rsm->addFieldResult('d', 'date_publication', 'datePublication');
		$rsm->addMetaResult('d', 'typeDocument', 'typeDocument'); // discriminator column
		$rsm->setDiscriminatorColumn('d', 'typeDocument');

		$now = date('Y-m-d 00:00:00');

		$sql = "SELECT d.id, d.titre, d.date_publication, d.typeDocument
				FROM Document d 
				INNER JOIN Slider s ON d.id = s.lnSource_id
				LEFT JOIN Image i ON i.id = s.lnSource_id
				WHERE d.statut LIKE 'ARTICLE_PUBLIE'
				AND d.date_publication < '$now'
				AND s.statut = 1
				AND d.typeDocument = 'article'
				ORDER BY d.id ASC
				LIMIT $limite";

		$query = $this->getEntityManager()
					  ->createNativeQuery($sql, $rsm)
					  ->useResultCache(true, 3600);

		return $query->getResult();
	}

}
