<?php

namespace TDN\Bundle\ProduitBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends EntityRepository
{
	public function findByTagKey ($chaine)
	{
		$qb = $this->createQueryBuilder('p');
		
		$tags = explode(' ', $chaine);
		$_orCondition = $qb->expr()->orX();
		foreach ($tags as $t) {
			$t = "%$t%";
			$_orCondition->add($qb->expr()->like('p.titre', $qb->expr()->literal($t)));
		}

		$query = $qb->select('p')
	        		->where($_orCondition)
	        		->orderBy('p.datePublication', 'DESC')
	        		/*->setFirstResult($offset*($limite-1))
	        		->setMaxResults($limite)*/
	        		->getQuery();

	    /*$query = "SELECT DISTINCT D FROM `Document` D JOIN DocumentThemes T ON T.for_document = D.id 
	    JOIN DocumentRubrique R1 ON T.for_document = R1.id JOIN DocumentRubrique R2 ON R1.rubriqueParente_id = R2.id 
	    WHERE D.typeDocument = 'video' AND D.statut LIKE 'VIDEO_PUBLIEE' AND (R1.slug LIKE '$rubrique' OR R2.slug LIKE '$rubrique')
	    LIMIT ($limite, $offset)";
	    */
	     $set = $query->getResult();
	     return $set;

	}

	public function selectionPanorama ($limite = 8) {

		$qb = $this->createQueryBuilder('p');
		$query = $qb->select('p')
					->leftJoin('p.lnSelection', 's')
	        		->where(
	        			$qb->expr()->andX(
	        				$qb->expr()->eq('p.favori', 1),
	        				$qb->expr()->orX(
	        					$qb->expr()->isNull('p.lnSelection'),
	        					$qb->expr()->like('s.statut', $qb->expr()->literal('SELECTION_PUBLIEE')
	        				)
	        			)
	        		))
	        		->orderBy('p.datePublication', 'DESC')
	        		->setMaxResults($limite)
	        		->getQuery();
	        		// ->useResultCache(true, 3600);

	     $set = $query->getResult();
	     return $set;
	}

	public function count($critere = 'tdn') {
        $qb = $this->createQueryBuilder('v');
		$query = $qb->select('v.idDocument');

		if ($critere == 'all') {
			// $query = $query->where(1);
		} elseif ($critere != 'tdn') {
			$query = $query->innerjoin('v.rubriques', 'r')
						   ->leftjoin('r.rubriqueParente', 'p')
				    		->where($qb->expr()->andX(
				    			$qb->expr()->like('v.statut', $qb->expr()->literal('PRODUIT_PUBLIE')),
				    			$qb->expr()->orX(
				    				$qb->expr()->like('r.slug', ':rubrique'),
				    				$qb->expr()->like('p.slug', ':rubrique')
				    			)))
				    		->setParameter('rubrique', $critere);
		} else {
			$query = $query->where($qb->expr()->like('v.statut', $qb->expr()->literal('PRODUIT_PUBLIE')));
		}

		$query = $query->groupBy('v.idDocument')
					   ->getQuery()
					   ->useResultCache(true, 3600);

        $nombre = $query->getResult();
        // print_r(count($nombre)); die;
        return count($nombre);
    }

}
